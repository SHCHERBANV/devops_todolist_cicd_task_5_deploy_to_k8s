name: python-deployment

run-name: ${{ github.actor }} - ${{ github.ref_name }} - ${{ github.sha }}

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  PythonVersion: 3.8
  DockerImageName: your-dockerhub-username/todoapp

jobs:
  python-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PythonVersion }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PythonVersion }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coverage flake8
          pip install -r requirements.txt
      - name: Run tests
        run: |
          python manage.py test
      - name: Generate Report
        run: |
          coverage run --source='.' manage.py test
          coverage report
      - name: Linting
        run: |
          flake8 . --show-source --statistics --exit-zero
      - name: Check Complexity
        run: |
          flake8 . --exit-zero --max-complexity=6
      - name: Upload python artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-artifacts
          path: .

      - name: Upload helm artifacts
        uses: actions/upload-artifact@v4
        with:
          name: helm-artifacts
          path: ${{ github.workspace }}/helm-charts

  docker-ci:
    runs-on: ubuntu-latest
    needs: python-ci
    steps:
      - uses: actions/download-artifact@v4
        name: Download python artifacts
        with:
          name: python-artifacts
          path: .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ./src
          tags: ${{ env.DockerImageName }}:${{ github.sha }}

  helm-ci:
    runs-on: ubuntu-latest
    needs: python-ci
    steps:
      - uses: actions/download-artifact@v4
        name: Download helm artifacts
        with:
          name: helm-artifacts
          path: .

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0

      - name: Lint Helm
        run: helm lint ./todoapp/

      - name: Template Helm
        run: helm template todoapp ./todoapp/ -f ./todoapp/values.yaml

      - name: Package Helm
        run: helm package ./todoapp

      - name: Upload helm package artifact
        uses: actions/upload-artifact@v4
        with:
          name: helm-package
          path: ./*.tgz

  deploy-helm:
    needs: [docker-ci, helm-ci]
    runs-on: ubuntu-latest
    steps:
      - name: Call reusable workflow for development
        uses: ./.github/workflows/deploy-kind.yml
        with:
          environment: development

      - name: Call reusable workflow for staging
        uses: ./.github/workflows/deploy-kind.yml
        with:
          environment: staging

      - name: Create pull request
        uses: peter-evans/create-pull-request@v3
        with:
          commit-message: "Enhanced CI/CD with Docker and Helm"
          title: "Enhanced CI/CD with Docker and Helm"
          body: |
            This pull request includes:
            - Docker build and push to DockerHub
            - Reusable workflow for deploying to kind Kubernetes cluster
            - Successful workflow run: ${{ github.run_url }}
